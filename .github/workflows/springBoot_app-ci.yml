name: Build, Test and Generate Artifact for the Spring Boot Application

on: 
  push:
    branches: [ "12-image-creation-with-spring-boot-artifact" ]
  # pull_request:
  #   branches: [ "main"]

  
  # workflow_dispatch:
  #   inputs:
  #     myVersion:
  #      description: 'Input Version'
  #     myValues:
  #      description: 'Input Values'


jobs:
    build-project:
        name: build project
        runs-on: ubuntu-latest
    
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
        
            - name: SetUp JDK 
              uses: actions/setup-java@v3
              with:
                java-version: '17'
                distribution: 'temurin'


            - name: Cache local Maven repository
              uses: actions/cache@v3
              with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                      ${{ runner.os }}-maven-

            - name: Build the spring boot application
              run: |
                  mvn -f spring-boot-app/pom.xml clean package
              
            - name: Copying the artifact to staging directory
              run: mkdir staging && cp spring-boot-app/target/*.jar staging


            - name: Testing the application
              run: |
                  mvn -f spring-boot-app/pom.xml clean test
              

            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4.0.0
              with:
                name: demo-0.0.1-SNAPSHOT.jar
                path: staging

            
            - name: Download a Build Artifact
              uses: actions/download-artifact@v4.1.0
              with: 
                   name: demo-0.0.1-SNAPSHOT.jar
                   path: staging
                
            - name: Docker Setup Buildx
              uses: docker/setup-buildx-action@v3.0.0
              
            - name: Docker Login
              uses: docker/login-action@v3.0.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
              
            - name: Build and push Docker images
              uses: docker/build-push-action@v5.1.0
              with:
                  push: ${{ github.events_nmae != 'pull_request' }}
                  tags: aapurva/spring-boot-app:${{ github.sha }}
                  # cache-from: type=gha
                  # cache-to: type=gha, mode=max
              
            
            - name: Run Trivy vulnerability scanner in image mode
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: '${{ env.REPOSITORY }}:${{ github.sha }}'
                  scan-type: 'image'
                  exit-code: '1'
                  scan-ref: '.'
                  ignore-unfixed: true
                  format: table
                  template: '@/contrib/sarif.tpl'
                  output: 'trivy-results.sarif'
                  vuln-type: 'os,library'
                  severity: 'CRITICAL,HIGH'
      
            # - name: Upload Trivy scan results to GitHub Security tab
            #   uses: github/codeql-action/upload-sarif@v2
            #   with:
            #       sarif_file: 'trivy-results.sarif'     
            
            # - name: Push Docker Image
            #   run: |
            #       docker push  
                     
           

    
