name: Build, Test and Generate Artifact for the Spring Boot Application

on: 
  push:
    branches: [ "12-image-creation-with-spring-boot-artifact" ]
  # pull_request:
  #   branches: [ "main"]

  
  # workflow_dispatch:
  #   inputs:
  #     myVersion:
  #      description: 'Input Version'
  #     myValues:
  #      description: 'Input Values'

jobs:
    build-project:
        name: build project
        runs-on: ubuntu-latest
    
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
        
            - name: SetUp JDK 
              uses: actions/setup-java@v3
              with:
                java-version: '17'
                distribution: 'temurin'
                cache: maven

            - name: Build the spring boot application
              run: mvn -f spring-boot-app/pom.xml clean package
              
            - name: Copying the artifact to staging directory
              run: mkdir staging && cp spring-boot-app/target/*.jar staging


            - name: Testing the application
              run: mvn -f spring-boot-app/pom.xml clean test
              

            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4.0.0
              with:
                name: demo-0.0.1-SNAPSHOT.jar
                path: staging

            
          

            
    build-image:
      name: build image
      runs-on: ubuntu-latest
      needs: build-project

      steps:
          - name: Download a Build Artifact
            uses: actions/download-artifact@v4.1.0
            with: 
               name: demo-0.0.1-SNAPSHOT.jar
               path: staging
            
          - name: Docker Setup Buildx
            uses: docker/setup-buildx-action@v3.0.0
          
          - name: Docker Login
            uses: docker/login-action@v3.0.0
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: Build and push Docker images
            env: 
              REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
              IMAGE_TAG: ${{ github.sha }}
            run: |
                cd /workspaces/DevOps-Hiring-Assessment-id-2
                ls 
                docker build -t $REPOSITORY:$IMAGE_TAG .
                docker push $REPOSITORY:$IMAGE_TAG
                 
           

    
